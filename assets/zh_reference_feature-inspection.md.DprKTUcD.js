import{_ as a,c as d,o as r,af as l}from"./chunks/framework.CPLsEXPO.js";const m=JSON.parse('{"title":"检查","description":"","frontmatter":{},"headers":[],"relativePath":"zh/reference/feature-inspection.md","filePath":"zh/reference/feature-inspection.md"}'),o={name:"zh/reference/feature-inspection.md"};function i(c,e,t,n,p,h){return r(),d("div",null,e[0]||(e[0]=[l('<h1 id="检查" tabindex="-1">检查 <a class="header-anchor" href="#检查" aria-label="Permalink to “检查”">​</a></h1><p>JimmerBuddy 提供了多种检查功能，帮助你发现代码中的问题。</p><h2 id="关联注解" tabindex="-1">关联注解 <a class="header-anchor" href="#关联注解" aria-label="Permalink to “关联注解”">​</a></h2><p>检查关联注解的正确用法：</p><ul><li><code>@OneToOne</code> 和 <code>@ManyToOne</code> 不能用于集合属性。</li><li><code>@OneToMany</code> 和 <code>@ManyToMany</code> 不能用于非集合属性。</li></ul><h2 id="mappedby-属性" tabindex="-1">mappedBy 属性 <a class="header-anchor" href="#mappedby-属性" aria-label="Permalink to “mappedBy 属性”">​</a></h2><p>检查关联的 <code>mappedBy</code> 属性：</p><ul><li>必须存在 <code>mappedBy</code> 属性。</li><li><code>mappedBy</code> 属性类型必须与反向属性类型匹配。</li></ul><h2 id="idview-注解" tabindex="-1">IdView 注解 <a class="header-anchor" href="#idview-注解" aria-label="Permalink to “IdView 注解”">​</a></h2><p>检查 <code>@IdView</code> 注解：</p><ul><li>如果属性为集合，必须存在 <code>value</code>。</li><li>如果类型为泛型，属性类型必须为集合。</li><li>必须存在基础属性。</li></ul><h2 id="formula-注解" tabindex="-1">Formula 注解 <a class="header-anchor" href="#formula-注解" aria-label="Permalink to “Formula 注解”">​</a></h2><p>检查 <code>@Formula</code> 注解：</p><ul><li>必须存在 <code>dependencies</code> 属性。</li></ul><h2 id="fetchby-注解" tabindex="-1">FetchBy 注解 <a class="header-anchor" href="#fetchby-注解" aria-label="Permalink to “FetchBy 注解”">​</a></h2><p>检查 <code>@FetchBy</code> 注解：</p><ul><li>属性必须为 fetcher。</li><li>属性必须存在。</li><li>fetcher 类型必须与 fetch 类型匹配。</li></ul><h2 id="不变类相关注解" tabindex="-1">不变类相关注解 <a class="header-anchor" href="#不变类相关注解" aria-label="Permalink to “不变类相关注解”">​</a></h2><p>检查 <code>@Immutable</code>、<code>@Entity</code>、<code>@MappedSuperclass</code> 和 <code>@Embeddable</code> 等注解的用法：</p><ul><li>必须用于接口上。</li></ul><h2 id="orderedprop-注解" tabindex="-1">OrderedProp 注解 <a class="header-anchor" href="#orderedprop-注解" aria-label="Permalink to “OrderedProp 注解”">​</a></h2><p>检查 <code>@OrderedProp</code> 注解：</p><ul><li>必须存在 <code>value</code> 属性。</li></ul>',23)]))}const u=a(o,[["render",i]]);export{m as __pageData,u as default};
