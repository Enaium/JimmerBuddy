import{_ as a,c as t,o,af as n}from"./chunks/framework.CPLsEXPO.js";const h=JSON.parse('{"title":"DTO Language","description":"","frontmatter":{},"headers":[],"relativePath":"guide/dto-language.md","filePath":"en/guide/dto-language.md"}'),r={name:"guide/dto-language.md"};function d(i,e,l,g,c,s){return o(),t("div",null,e[0]||(e[0]=[n('<h1 id="dto-language" tabindex="-1">DTO Language <a class="header-anchor" href="#dto-language" aria-label="Permalink to “DTO Language”">​</a></h1><p>DTO Language is a generated language for DTO. It&#39;s used to generate DTO code. But, it depends on Java or Kotlin code, so it&#39;s hard to write DTO code in plain text.</p><p>JimmerBuddy provides a language extension for IntelliJ IDEA. It has the following features:</p><ul><li>Syntax highlight.</li><li>Syntax check.</li><li>Native compiler check.</li><li>Code format.</li><li>Code completion.</li></ul><p>and more...</p><h2 id="generate-dto-code" tabindex="-1">Generate DTO Code <a class="header-anchor" href="#generate-dto-code" aria-label="Permalink to “Generate DTO Code”">​</a></h2><p>Similar <a href="./generate-code.html">Genreate Code</a>, you can generate DTO code when you change the dto source code.</p>',7)]))}const p=a(r,[["render",d]]);export{h as __pageData,p as default};
