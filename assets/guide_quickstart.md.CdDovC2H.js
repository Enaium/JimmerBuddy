import{_ as a,c as t,o as l,af as i}from"./chunks/framework.CPLsEXPO.js";const p=JSON.parse('{"title":"Quickstart","description":"","frontmatter":{},"headers":[],"relativePath":"guide/quickstart.md","filePath":"en/guide/quickstart.md"}'),n={name:"guide/quickstart.md"};function r(o,e,s,h,d,c){return l(),t("div",null,e[0]||(e[0]=[i('<h1 id="quickstart" tabindex="-1">Quickstart <a class="header-anchor" href="#quickstart" aria-label="Permalink to “Quickstart”">​</a></h1><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to “Install”">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to “Prerequisites”">​</a></h3><ul><li>IntelliJ IDEA 2023.1 or later</li></ul><h3 id="install-via-intellij" tabindex="-1">Install via IntelliJ <a class="header-anchor" href="#install-via-intellij" aria-label="Permalink to “Install via IntelliJ”">​</a></h3><ol><li>Open IntelliJ IDEA.</li><li>Go to <code>File</code> &gt; <code>Settings</code> &gt; <code>Plugins</code>.</li><li>Click <code>Marketplace</code>.</li><li>Search for <code>JimmerBuddy</code> and install it.</li></ol><h3 id="install-online" tabindex="-1">Install Online <a class="header-anchor" href="#install-online" aria-label="Permalink to “Install Online”">​</a></h3><ol><li>Open <a href="https://plugins.jetbrains.com/plugin/26622-jimmer-buddy" target="_blank" rel="noreferrer">this link</a>.</li><li>Click the <code>Get</code> button.</li></ol><h3 id="install-offline" tabindex="-1">Install Offline <a class="header-anchor" href="#install-offline" aria-label="Permalink to “Install Offline”">​</a></h3><ol><li>Open <a href="https://plugins.jetbrains.com/plugin/26622-jimmer-buddy" target="_blank" rel="noreferrer">this link</a>.</li><li>Click the <code>Versions</code> button.</li><li>Download the latest version.</li><li>In IntelliJ, go to <code>File</code> &gt; <code>Settings</code> &gt; <code>Plugins</code> &gt; <code>Install plugin from disk...</code> and select the downloaded file.</li></ol><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to “FAQ”">​</a></h2><h3 id="why-is-the-plugin-not-available" tabindex="-1">Why is the plugin not available? <a class="header-anchor" href="#why-is-the-plugin-not-available" aria-label="Permalink to “Why is the plugin not available?”">​</a></h3><ul><li>Please wait for the project to finish indexing, then reopen the project.</li></ul><h3 id="when-does-the-plugin-generate-draft-props-etc" tabindex="-1">When does the plugin generate draft, props, etc.? <a class="header-anchor" href="#when-does-the-plugin-generate-draft-props-etc" aria-label="Permalink to “When does the plugin generate draft, props, etc.?”">​</a></h3><ul><li>When you change Java or Kotlin source files, wait about 2 seconds.</li></ul><h3 id="when-does-the-plugin-generate-dto-view-input-etc" tabindex="-1">When does the plugin generate DTO view, input, etc.? <a class="header-anchor" href="#when-does-the-plugin-generate-dto-view-input-etc" aria-label="Permalink to “When does the plugin generate DTO view, input, etc.?”">​</a></h3><ul><li>When you change DTO source files, wait about 2 seconds.</li></ul><h3 id="why-doesn-t-the-plugin-generate-source-for-immutable-and-dto" tabindex="-1">Why doesn&#39;t the plugin generate source for Immutable and DTO? <a class="header-anchor" href="#why-doesn-t-the-plugin-generate-source-for-immutable-and-dto" aria-label="Permalink to “Why doesn&#39;t the plugin generate source for Immutable and DTO?”">​</a></h3><ul><li>Please check the plugin log tool window at the bottom or lower left, then create an issue if needed.</li></ul><h3 id="why-is-the-generated-source-different-from-jimmer-s-apt-ksp" tabindex="-1">Why is the generated source different from Jimmer&#39;s apt/ksp? <a class="header-anchor" href="#why-is-the-generated-source-different-from-jimmer-s-apt-ksp" aria-label="Permalink to “Why is the generated source different from Jimmer&#39;s apt/ksp?”">​</a></h3><ul><li>Don&#39;t worry, Jimmer&#39;s apt/ksp will generate the full source when your project builds.</li></ul>',21)]))}const f=a(n,[["render",r]]);export{p as __pageData,f as default};
